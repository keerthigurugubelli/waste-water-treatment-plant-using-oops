#include <iostream>

#ifndef _WASTE_WATER_TREATMENT_PLANT_H
#define _WASTE_WATER_TREATMENT_PLANT_H

class WasteWaterTreatmentPlant {
};

#endif //_WASTE_WATER_TREATMENT_PLANT_H

#ifndef _STRUCTURE_H
#define _STRUCTURE_H

class Structure {
};

#endif //_STRUCTURE_H

#ifndef _TECHNICAL_EQUIPMENT_H
#define _TECHNICAL_EQUIPMENT_H

class TechnicalEquipment {
public: 
    void ScraperInstallation() {
        std::cout << "Scraper installation performed." << std::endl;
    }

    void RotaryDistributor() {
        std::cout << "Rotary distributor operation performed." << std::endl;
    }

    void Pump() {
        std::cout << "Pump operation performed." << std::endl;
    }

    void Mixer() {
        std::cout << "Mixer operation performed." << std::endl;
    }

    void AerationInstallation() {
        std::cout << "Aeration installation performed." << std::endl;
    }

    void MeasuringInstrument() {
        std::cout << "Measuring instrument used." << std::endl;
    }
};

#endif //_TECHNICAL_EQUIPMENT_H

#ifndef _RACK_H
#define _RACK_H

class Rack : public Structure {
};

#endif //_RACK_H

#ifndef _BASIN_H
#define _BASIN_H

class Basin : public Structure {
public: 
    void GritChamber() {
        std::cout << "Grit chamber operation performed." << std::endl;
    }

    void AerationTank() {
        std::cout << "Aeration tank operation performed." << std::endl;
    }

    void PrimarySettlementTank() {
        std::cout << "Primary settlement tank operation performed." << std::endl;
    }

    void SecondarySettlementTank() {
        std::cout << "Secondary settlement tank operation performed." << std::endl;
    }

    void SettlementTank() {
        std::cout << "Settlement tank operation performed." << std::endl;
    }
};

#endif //_BASIN_H

int main() {
    TechnicalEquipment equipment;
    equipment.ScraperInstallation();
    equipment.RotaryDistributor();
    equipment.Pump();
    equipment.Mixer();
    equipment.AerationInstallation();
    equipment.MeasuringInstrument();

    Basin basin;
    basin.GritChamber();
    basin.AerationTank();
    basin.PrimarySettlementTank();
    basin.SecondarySettlementTank();
    basin.SettlementTank();

    return 0;
}
